<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="task_dn4_qh3_w4">
  <title>Let's explore the configuration file</title>
  <shortdesc>The Theme configuration file is pretty simple to create</shortdesc>
  <taskbody>
   <context>
    <p>In order to create a theme, you need few css files to work with</p>
   </context>
   <steps>
    
    <step>
     <cmd>In your customizaton directory, creates a directory, name it <filepath>theme</filepath> for example.</cmd>
     <info>The name has no importance. 
      <note>The ant property <varname>html5.theme.config.dir</varname> allows to set the reference to this directory</note></info>
    </step>
    
    <step>
     <cmd>In the <filepath>theme</filepath> directory, create a new xml file with the name of the theme of your choice.</cmd>
     <stepxmp>For example, if you want your theme name to be <q>my-company</q>, then the file is <filepath>my-company.xml</filepath></stepxmp>  
    </step>
    
    <step>
     <cmd>Add the root element <apiname>&lt;html5&gt;</apiname></cmd>
     <stepresult>
      <p>Your document should looks like:
      <codeblock><data name="language" value="xml"/>
        &lt;?xml version="1.0" encoding="utf-8"?&gt;
        &lt;html5&gt;
        
        &lt;/html5&gt;
      </codeblock></p>
     </stepresult>
    </step>
    
    <step>
     <cmd>Create the first <apiname>&lt;tag&gt;</apiname> element</cmd>
     <info>
      <p>The <apiname>&lt;tag&gt;</apiname> represents an element that should be render on the html side. 
       It also provided the required instructions to concatenate and compress the required files</p>
      <p>The tag elements contains the following possible elements:
      <ul>
       <li><b>name: </b>the name of the element to generate, usually <codeph>link</codeph> for css and <codeph>script</codeph> for javascripts;</li>
       <li><b>output: </b>tells the xsl code to render the file on the content or not. Possible values are yes or no. 
        This is used to prepare a set of file that would be called by javascript for example.</li>
       <li><b>filename: </b>The name of the uncompressed file, for example <filepath>style.css</filepath> for a css <filepath>script.js</filepath> for a javascript;</li>
       <li><b>prefix: </b> A prefix code to output before the element. It is used to add conditionnal css for Internet Explorer for example. See: <xref keyref="html5-theme-add-conditional-css"/></li>
       <li><b>suffix: </b> A suffix code to output before the element. It is used to add conditionnal css for Internet Explorer for example. See: <xref keyref="html5-theme-add-conditional-css"/></li>
       <li><b>attributes: </b> An element and a value for each attributes you want to set. See example below:</li>
       <li><b>value:</b> The content to ouput in this element</li>
       <li><b>source</b> One element <apiname>&lt;file&gt;</apiname> per file you want to concatenate and compress. 
        The attribute <varname>path</varname> provide the reference to the css or javascript file.</li>
      </ul>
      </p>
     </info>
     <stepxmp>
      <p>Example:</p>
      <codeblock><data name="language" value="xml"></data>
  &lt;tag&gt;
    &lt;name&gt;link&lt;/name&gt;
    &lt;output&gt;yes&lt;/output&gt;
    &lt;filename&gt;style.css&lt;/filename&gt;
    &lt;prefix&gt;&lt;/prefix&gt;
    &lt;suffix&gt;&lt;/suffix&gt;
    &lt;attributes&gt;
        &lt;rel&gt;stylesheet&lt;/rel&gt;
        &lt;type&gt;text/css&lt;/type&gt;
        &lt;media&gt;screen, projection&lt;/media&gt;
    &lt;/attributes&gt;
    &lt;value&gt;&lt;/value&gt;
    &lt;source&gt;
      &lt;file path="html5-foundation/css/app.css" /&gt;
      &lt;file path="html5-foundation/css/foundation.css" /&gt;
      &lt;file path="html5-foundation/css/normalize.css" /&gt;
    &lt;/source&gt;
  &lt;/tag&gt;
      </codeblock>
      <p>Will result in:</p>
      <codeblock><data name="language" value="xml"></data>
        &lt;link 
         rel="stylesheet" 
         type="text/css" 
         media="screen, projection" 
         href="themes/my-company/css/style.css"&gt;
      </codeblock>
      
      <p>All the files app.css, foundation.css and normalize.css are concatenated and compressed in file <filepath>style.min.css</filepath>. The file <filepath>style.css</filepath> will be also present in the theme directory</p>
     </stepxmp>
    </step>
     
     <step>
      <cmd>Create as many tag as you need</cmd>
     </step>
     
     <step>
      <cmd>Register your Theme in your customization plugin</cmd>
      <info>See: </info>
     </step>
   
    
   </steps>
  </taskbody>
</task>
