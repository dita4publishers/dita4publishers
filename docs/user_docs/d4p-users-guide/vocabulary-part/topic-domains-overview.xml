<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE subsection PUBLIC "urn:pubid:dita4publishers.org:doctypes:dita:subsection" "urn:pubid:dita4publishers.org:doctypes:dita:subsection">
<subsection
  id="subsection-id">
  <title>Topic Domains</title>
  <shortdesc>The topic domains provide markup commonly needed in publications that would not be needed or wanted in most technical publications.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>domains<indexterm>topic</indexterm><indexterm>classification</indexterm><indexterm>enumeration</indexterm><indexterm>formatting</indexterm><indexterm>verse</indexterm><indexterm>publication content</indexterm></indexterm>
        <indexterm>topic domains</indexterm>
        <indexterm>classification domain</indexterm>
        <indexterm>enumeration domain</indexterm>
        <indexterm>formatting domain</indexterm>
        <indexterm>verse domain</indexterm>
        <indexterm>publication content domain</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>The standard DITA markup design is driven by the normal business requirements for technical documents, which include the avoidance of author-specification of layout and formatting details, including numbering. Thus DITA has a minimum number of "arbitrary formatting" elements. Publishers are driven by almost completely opposite business requirements.</p>
    <p>Publishers must be able to express arbitrary, even non-sensical, formatting intent on behalf of authors. Publishers must also be able to do things like numbering in flexible and ideosyncratic way. Publishers must be able to capture legacy content details so they can be reproduced or searched on.</p>
    <p>The DITA for Publishers topic domains attempt to address these requirements in a general way and show a path toward more specific markup as may be needed by specific publishers or for specific publications.</p>
    <p>Using these domains it should be possible accurately capture most or all of the essential formatting details within publication content, such as numbering of headings, paragraphs, and list items, line breaks, inline font and decoration changes, and so on. It is not the intent of these domains to capture the full details of each page in a legacy document--that is simply not possible in a general XML format.</p>
    <p>In addition to formatting, these domains also provide semantic elements for things that are typical of publications and not usually found in technical documents, such as poetry and epigraphs.</p>
    <p>The classification domain provides a general-purpose specialization of <xmlelement>data</xmlelement> that expresses the semantic of "classifying metadata" as distinct from any other form of metadata. The idea is that the <xmlelement>classification</xmlelement> element contains metadata elements that bind content to specific classifiers, usually in terms of some separately-defined taxonomy. </p>
    <p>The point of having a specific <xmlelement>classification</xmlelement> element is twofold. First it makes it clear to authors and markup designers that "classification goes here". It also enables more focused classification-based searching by providing a consistent container for metadata that holds classification details. This can make it easier to configure things like faceted search. Otherwise there is no magic to it.</p>
    <p>The general use intent of the classification domain is that you will define additional domain modules that provide the specific classification tagging you need that reflects the specific taxonomies or classification schemes you use. However, you can also just use generic <xmlelement>data</xmlelement> elements with appropriate <xmlatt>name</xmlatt> values and content or <xmlatt>value</xmlatt> values without specializing.</p>
  </body>
</subsection>
