<project name="DITA For Publishers" basedir="."
  xmlns:ivy="antlib:org.apache.ivy.ant"
	>
	
	<!-- NOTE: This script requires that the DITA Open Toolkit
	           libraries be included in the Java classpath
	           used to run Ant itself. See the project
	           documentation for setup instructions. For 
	           Eclipse, you need to add the jars in the
	           Toolkit lib/ and lib/saxon/ directories
	           to the Ant jars configured in the Eclipse
	           Ant/runtime preferences.
	  -->

	<!-- NOTE: Update version.properties as needed to reflect new 
	           versions of project components.
	  -->
  <property file="version.properties"/>
  <property file=".build.properties"/>
  <property file="build.properties"/>
  <property file="${user.home}/.build.properties"/>
  <property file="${user.home}/build.properties"/>
	
  <property name="build" location="${basedir}/build"/>
  <property name="dist" location="${basedir}/dist"/>
  <property name="lib" location="${basedir}/lib"/>
  <property name="src" location="${basedir}/src/java"/>
	<property name="license.dir" location="${basedir}/license"/>
	<property name="rsuite.src" location="${basedir}/rsuite/src/java"/>
	<property name="rsuite.xslt" location="${basedir}/rsuite/xslt"/>
  <property name="toolkit.plugin.src" location="${basedir}/toolkit_plugins"/>
  <property name="rsuiteSrc" location="${basedir}/rsuite"/>
  <property name="temp" location="${basedir}/temp"/>
  <property name="epubTemp" location="${temp}/epub"/>
  <property name="epubBuild" location="${build}/epubs"/>
  <property name="kindleTemp" location="${temp}/kindle"/>
  <property name="kindleBuild" location="${build}/kindle"/>
  <property name="docs.dir" location="${basedir}/docs"/>
  <property name="docs" location="${basedir}/docs"/>
  <property name="templates.dir" location="${toolkit.plugin.src}/org.dita4publishers.doctypes/templates"/>
  <property name="website.source" location="${docs}/website"/>
  <property name="website.build" location="${build}/website"/>
	<property name="sampledata" location="${basedir}/sample_data"/>
  <property name="sampledata.dist" location="${dist}/sample_data"/>
	<property name="plugin.dist" location="${dist}/plugins"/>
  <property name="package.dist" location="${dist}/dita4publishers"/>
	<property name="package.zip.base" value="dita4publishers"/>
  <property name="dita-ot-dir" location="c:\DITA-OT1.5"/>
  <property name="plugin.src" location="${basedir}/toolkit_plugins"/>
	<property name="shakespear-sample" location="${basedir}/sample_data/specializations/shakespear"/>
  <property name="plugin-shakespear-samples-src" value="${shakespear-sample}/toolkit_plugins"/>
  <property name="plugin-deploy_target" location="${dita-ot-dir}/plugins"/>
  <property name="doctypes.plugin-dist" location="${plugin.dist}/org.dita4publishers.doctypes"/>
  <property name="doctypes.plugin-shakespear-dist" value="${plugin.dist}/org.dita4publishers.shakespear.doctypes"/>
  <property name="doctypes-skakespear-samples.src" value="${shakespear-sample}/doctypes"/>
  <property name="xslt.src" location="${basedir}/xslt"/>
	<property name="target.home" location="${basedir}/target"/>
	<property name="api-and-tools.dirname" value="d4p-api-and-tools"/>
	<property name="api-and-tools.target" location="${target.home}/${api-and-tools.dirname}"/>
  <property name="api-and-tools.dist" location="${dist}/${api-and-tools.dirname}"/>
  <property name="release.dir" location="${basedir}/release"/>
	
  <import file="install-ivy.xml"/>
  

  <property name="lib.home" value="${lib}" />
  <property name="src.home" value="${basedir}/src" />
  <property name="src.java.home" value="${src.home}/java" />

  <property name="resources.home" value="${src.home}/resources" />
  <property name="classes.home" value="${target.home}/classes"/>

	<property name="rsuite-plugin.name"  value="dita4publishers-rsuite" />

  <property name="target.home"         value="target"/>
  <property name="target.jar"          value="${rsuite-plugin.name}-plugin.jar"/>
	
	

	<path id="dita-classpath"
		>
		<fileset dir="${dita-ot-dir}">
			<include name="lib"/>
		</fileset>
		<fileset dir="${dita-ot-dir}/lib">
		  <include name="**/*.jar"/>
		</fileset>
    <fileset dir="${dita-ot-dir}/lib/org.dita.dost.platform">
      <include name="*.properties"/>
    </fileset>
    <fileset dir="${dita-ot-dir}/lib/saxon">
      <include name="**/*.jar"/>
    </fileset>
	</path>
	
  <path id="classpath.base">
    <pathelement path="${classes.home}"/>
    <fileset dir="${lib}">
        <include name="*.jar"/>
    </fileset>
  </path>

  <target name="resolve" description="Retrieve dependencies with ivy" depends="init, init-ivy">
      <ivy:retrieve pattern="${ivy.lib.dir}/[artifact].[ext]" />
  </target>

	<target name="init">
		<buildnumber/>
    <tstamp/>
  </target>

  <tstamp>
		<format property="package.date" pattern="yyyy-MM-dd"/>
	</tstamp>
  
  <tstamp>
  	<format property="build-date-time"
  	          pattern="yyyy-MM-dd HH:mm:SSS z"/>
	</tstamp>


  <target name="clean">
  </target>
	
	<target name="add-version-info-to-files">
    <replace file="${plugin.dist}/org.dita4publishers.epub/xsl/map2epubImpl.xsl"
      propertyfile="${basedir}/build.number"
      >
      <replacefilter
        token="^buildnumber^"
        property="build.number"
      />
      <replacefilter
        token="^version^"
        value="${epub_version}"
      />
      <replacefilter
        token="^timestamp^"
        value="${package.date}"
      />
    </replace>
    <replace file="${plugin.dist}/org.dita4publishers.kindle/xsl/map2kindleImpl.xsl"
      propertyfile="${basedir}/build.number"
      >
      <replacefilter
        token="^buildnumber^"
        property="build.number"
      />
      <replacefilter
        token="^version^"
        value="${kindle_version}"
      />
      <replacefilter
        token="^timestamp^"
        value="${package.date}"
      />
    </replace>
    <replace file="${plugin.dist}/org.dita4publishers.html2/xsl/map2html2Impl.xsl"
      propertyfile="${basedir}/build.number"
      >
      <replacefilter
        token="^buildnumber^"
        property="build.number"
      />
      <replacefilter
        token="^version^"
        value="${html2_version}"
      />
      <replacefilter
        token="^timestamp^"
        value="${package.date}"
      />
    </replace>
    <replace file="${plugin.dist}/org.dita4publishers.word2dita/xsl/docx2dita.xsl"
      propertyfile="${basedir}/build.number"
      >
      <replacefilter
        token="^buildnumber^"
        property="build.number"
      />
      <replacefilter
        token="^version^"
        value="${word2dita_version}"
      />
      <replacefilter
        token="^timestamp^"
        value="${package.date}"
      />
    </replace>
	</target>
	
	<target name="dist-license-info" depends="dist-init">
		<copy todir="${package.dist}">
			<fileset dir="${license.dir}">
			  <include name="*"/>
		  </fileset>
		</copy>
	</target>
	
	<target name="dist-sample-data" depends="dist-init">
    <copy todir="${sampledata.dist}">
      <fileset dir="${sampledata}">
      	<exclude name="**/*.zip"/>
        <exclude name="**/epub/"/>
        <exclude name="**/out/"/>
        <exclude name="**/output/"/>
        <exclude name="**/temp/"/>
        <include name="common/**"/>
      	<include name="word2dita/**"/>
        <include name="wizard-of-oz/**"/>
        <include name="japanese/**"/>
      </fileset>
    </copy>
	</target>
	
	<target name="dist-license" 
	  description="Packages the license used for all packages"
		 depends="dist-init"
		>
    <copy todir="${plugin.dist}">
      <fileset dir="${license.dir}">
        <include name="*"/>
      </fileset>
    </copy>
	</target>
	
	<target name="dist-common-toolkit-plugins" 
	  description="Packages the plugins used by all D4P transformation types"
		 depends="dist-init, dist-license"
		>
		<copy todir="${plugin.dist}">
			<fileset dir="${plugin.src}">
			  <include name="org.dita-community.adjust-copy-to/**"/>
			  <include name="org.dita-community.common.xslt/**"/>
			  <include name="org.dita-community.common.mapdriven/**"/>
			  <include name="org.dita-community.preprocess-extensions/**"/>
        <include name="org.dita4publishers.common.mapdriven/**"/>
			  <include name="org.dita4publishers.common.xslt/**"/>
			</fileset>
		</copy>
	</target>
  
	<target name="dist-word2dita-toolkit-plugins" 
	  description="Packages the plugins used the word2dita plugin"
		 depends="dist-init, dist-license, dist-doctype-plugins"
		>
		<copy todir="${plugin.dist}">
			<fileset dir="${plugin.src}">
			  <include name="org.dita-community.common.xslt/**"/>
			  <include name="org.dita4publishers.word2dita/**"/>
			</fileset>
		</copy>
	</target>
  
  <target name="dist-doctype-plugins" 
     description="Packages just the doctype plugins"
     depends="dist-init, dist-license"
    >
		<copy todir="${plugin.dist}">
			<fileset dir="${plugin.src}">
			  <include name="net.sourceforge.dita4publishers.doctypes/**"/>
			  <include name="org.dita4publishers.doctypes/**"/>
			  <include name="org.dita4publishers.math/**"/>
			  <include name="org.dita4publishers.xmldomain.doctypes/**"/>
			</fileset>
		</copy>
    <replace dir="${plugin.dist}/org.dita4publishers.math/doctypes/mathml3/dtd">
      <!-- 
      %character; to %mll3_character;
      -->
      <include name="*.dtd"/>
      <replacetoken><![CDATA[%character;]]></replacetoken>
      <replacevalue><![CDATA[%mml_character;]]></replacevalue>
    </replace>
	  <!-- Standalone Math plugin -->
		<!-- FIX a bug/unfortunate potential parameter entity name clash with the MathML3 DTD -->
		<replace dir="${plugin.dist}/org.dita4publishers.math/doctypes/mathml3/dtd">
			<!-- 
			<!ENTITY % character "CDATA"> to <!ENTITY % mll3_character "CDATA" >
			-->
			<include name="*.dtd"/>
			<replacetoken><![CDATA[<!ENTITY % character ]]></replacetoken>
			<replacevalue><![CDATA[<!ENTITY % mml_character ]]></replacevalue>
		</replace>
    
	</target>
  
  <target name="dist-common-html-toolkit-plugins" 
     description="Packages just the doctype plugins"
     depends="dist-common-toolkit-plugins"
    >
		<copy todir="${plugin.dist}">
			<fileset dir="${plugin.src}">
			  <include name="org.dita4publishers.common.mapdriven/**"/>
			  <include name="org.dita4publishers.common.html/**"/>
			  <include name="org.dita4publishers.math-d.html/**"/>
			  <include name="org.dita4publishers.media-d.html/**"/>
			</fileset>
		</copy>
  </target>

  <target name="dist-html2-toolkit-plugins" 
     description="Packages just the doctype plugins"
     depends="dist-init, dist-license, dist-common-html-toolkit-plugins"
    >
		<copy todir="${plugin.dist}">
			<fileset dir="${plugin.src}">
			  <include name="org.dita4publishers.html2/**"/>
			  <!-- These are required because the HTML2 transform 
			       adds the MathJax stuff by default.
			    -->
			  <include name="org.dita4publishers.math-d.html/**"/>
			  <include name="org.dita4publishers.media-d.html/**"/>
			</fileset>
		</copy>
  </target>
	
  <target name="dist-html5-toolkit-plugins" 
     description="Packages just the doctype plugins"
     depends="dist-init, dist-license, dist-common-html-toolkit-plugins"
    >
		<copy todir="${plugin.dist}">
			<fileset dir="${plugin.src}">
			  <include name="org.dita4publishers.html5/**"/>
			  <include name="org.dita4publishers.json/**"/>
			</fileset>
		</copy>
  </target>
	
  <target name="dist-epub-toolkit-plugins" 
     description="Packages just the EPUB plugins"
     depends="dist-init, dist-license, dist-common-html-toolkit-plugins"
    >
		<copy todir="${plugin.dist}">
			<fileset dir="${plugin.src}">
			  <include name="org.dita4publishers.epub/**"/>
			</fileset>
		</copy>
  </target>
	
  <target name="dist-kindle-toolkit-plugins" 
     description="Packages just the kindle plugins"
     depends="dist-epub-toolkit-plugins"
    >
		<copy todir="${plugin.dist}">
			<fileset dir="${plugin.src}">
			  <include name="org.dita4publishers.kindle/**"/>
			</fileset>
		</copy>
  </target>
	
	<target name="dist-toolkit-plugins" description="Packages the DITA Open Toolkit plugins for deployment to a working Toolkit instance"
		 depends="dist-common-toolkit-plugins, 
		 dist-doctype-plugins, 
		 dist-kindle-toolkit-plugins, 
		 dist-html5-toolkit-plugins, 
		 dist-html2-toolkit-plugins, 
		 dist-word2dita-toolkit-plugins
		 "
		>
		<copy todir="${plugin.dist}">
			<fileset dir="${plugin.src}">
				<include name="org.dita4publishers.common.xslfo/**"/> 
				<include name="org.dita4publishers.*.fo/**"/> 
				<include name="org.dita4publishers.*.html/**"/> 
			</fileset>
		</copy>
    <copy todir="${doctypes.plugin-shakespear-dist}/doctypes">
      <fileset dir="${doctypes-skakespear-samples.src}">
      </fileset>
    </copy>
		
		<!-- FIXME: Make this work again -->
<!--    <antcall target="add-version-info-to-files"/>-->
		
  </target>
	
  <target name="dist-dita2indesign-toolkit-plugins" 
  	description="Creates a standalone distribution of the DITA2InDesign Open Toolkit plug-ins" 
  	depends="dist-init">
    <!-- NOTE: These used to be called org.dita2indesign.* -->
    <delete includeEmptyDirs="true" failonerror="false">
      <fileset dir="${plugin.dist}"  includes="org.dita4publishers.*/**"/>
    </delete>
		<copy todir="${plugin.dist}">
			<fileset dir="${plugin.src}">
				<include name="org.dita4publishers.*/**/*"/>
			</fileset>
		</copy>
		<replace file="${plugin.dist}/org.dita4publishers.dita2indesign/xsl/dita2indesignImpl.xsl"
			propertyfile="${basedir}/build.number"
			>
			<replacefilter
				token="^buildnumber^"
				property="build.number"
			/>
			<replacefilter
				token="^version^"
			  value="${dita2indesign_version}"
			/>
			<replacefilter
				token="^timestamp^"
			  value="${package.date}"
			/>
		</replace>
  </target>
    
  <target name="package-dita2indesign-toolkit-plugins" 
      description="Creates a standalone delivery package of the DITA2InDesign Open Toolkit plugins" 
      depends="dist-dita2indesign-toolkit-plugins">
    <zip destfile="${plugin.dist}/dita2indesign-toolkit-plugins-${dita2indesign_version}-ot-${ot-version}.zip">
        <fileset dir="${plugin.dist}">
          <include name="org.dita4publishers.*/**"/>
        </fileset>
      </zip>
  </target>


	
	<target name="deploy-preprocess-test-plugin" 
	  description="Deploy plugins to local DITA Open Toolkit">
	  <echo> Deploying org.dita-community.preprocess-tester...</echo>
	  <copy todir="${plugin-deploy_target}">
			<fileset dir="${plugin.src}/org.dita-community.preprocess-tester">
				<include name="**"/>
			</fileset>
		</copy>
	  <echo> Calling integrator...</echo>
    <!-- Integrate the deployed plugins: -->
	  <exec executable="${dita-ot-dir}/bin/dita">
	    <arg line="-install"/>
	  </exec>
	  
  </target>


	
	<target name="deploy-toolkit-plugins" depends="dist-toolkit-plugins"
	  description="Deploy plugins to local DITA Open Toolkit">
		<delete failonerror="true" includeemptydirs="true">
			<fileset dir="${plugin-deploy_target}" includes="org.dita4publishers.*/**"/>
			<fileset dir="${plugin-deploy_target}" includes="org.dita-community.*/**"/>			
		</delete>
		<mkdir dir="${plugin-deploy_target}"/>
		<copy todir="${plugin-deploy_target}">
			<fileset dir="${plugin.dist}">
				<include name="**/*"/>
        <exclude name="**/CVS"/>
				<!--
				<exclude name="org.dita4publishers.pubmap.fo/**"/>
				-->
			</fileset>
		</copy>
    <!-- Integrate the deployed plugins: -->
	  <exec executable="${dita-ot-dir}/bin/dita">
	    <arg line="-install"/>
	  </exec>

	</target>
	
	<target name="deploy-disted-plugins">
	  <!-- Deploys whatever have been put in the dist directory -->
		<delete failonerror="true" includeemptydirs="true">
			<fileset dir="${plugin-deploy_target}" includes="org.dita4publishers.*/**">
			  <exclude name="net.sourceforge.dita4publishers.doctypes/**"/>
			  <exclude name="org.dita4publishers.doctypes/**"/>
			  <exclude name="org.dita4publishers.math/**"/>
			  <exclude name="org.dita4publishers.xmldomain.doctypes/**"/>
			</fileset>
			<fileset dir="${plugin-deploy_target}" includes="org.dita-community.*/**"/>			
		</delete>
		<mkdir dir="${plugin-deploy_target}"/>
		<copy todir="${plugin-deploy_target}">
			<fileset dir="${plugin.dist}">
				<include name="**/*"/>
        <exclude name="**/CVS"/>
			</fileset>
		</copy>
    <!-- Integrate the deployed plugins: -->
	  <exec executable="${dita-ot-dir}/bin/dita">
	    <arg line="--install"/>
	  </exec>
	  
	</target>
	
	<target name="deploy-html2" depends="dist-html2-toolkit-plugins, deploy-disted-plugins"
	  description="Deploy only the HTML2 plugin and its dependencies to local DITA Open Toolkit">
	</target>
	
 	<target name="deploy-html5" depends="dist-html5-toolkit-plugins, deploy-disted-plugins"
	  description="Deploy only the HTML5 plugin and its dependencies to local DITA Open Toolkit">
	</target>
	
 <target name="deploy-epub" depends="dist-epub-toolkit-plugins, deploy-disted-plugins"
	  description="Deploy only the EPUB plugin and its dependencies to local DITA Open Toolkit">
	</target>

 <target name="deploy-kindle" depends="dist-kindle-toolkit-plugins, deploy-disted-plugins"
	  description="Deploy only the Kindle plugin and its dependencies to local DITA Open Toolkit">
	</target>

	<target name="dist-init" depends="init">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${dist}" includes="*/**"/>
  	</delete>
		<mkdir dir="${dist}"/>
		<mkdir dir="${package.dist}"/>
	  <mkdir dir="${release.dir}"/>
	</target>
	
  <target name="dist-api-and-tools" description="Create distribution package for API and tools materials."
  	depends="package-api-and-tools">
    <zip destfile="${dist}/${api-and-tools.dirname}-${package.date}-ot-${ot-version}.zip">
      <fileset dir="${api-and-tools.target}">
      	<include name="**/*"/>
      </fileset>
    </zip>    
  </target>
  
	<target name="dist-epub-plugin" depends="build-d4p-user-guide">
    <delete failonerror="true" includeemptydirs="true">
      <fileset dir="${plugin.dist}" includes="org.dita4publishers.epub/**"/>
    </delete>
    <copy todir="${plugin.dist}/org.dita4publishers.epub">
      <fileset dir="${build}/docs">
        <include name="*.epub"/>
        <include name="*.mobi"/>
        <include name="*.pdf"/>
      </fileset>
      <fileset dir="${plugin.src}/org.dita4publishers.epub">
        <include name="**/*"/>
      </fileset>
      <fileset dir="${plugin.src}/org.dita4publishers.common.xslt">
        <include name="**/*"/>
      </fileset>
      <fileset dir="${plugin.src}/org.dita4publishers.kindle">
        <include name="**/*"/>
      </fileset>
    </copy>
	</target>
	
	<target name="dist-documentation" depends="dist-init">
    <copy todir="${package.dist}/documentation">
      <fileset dir="${docs.dir}/user_docs">
      	<exclude name="epub/"/>
        <exclude name="kindle/"/>
        <exclude name="out/"/>
        <exclude name="docx2*/"/>
        <exclude name="temp/"/>
        <include name="*/**"/>
      </fileset>
    </copy>

	</target>
  
  <target name="deploy-doctypes" depends="dist-doctype-plugins, deploy-disted-plugins"
    description="Deploy only the EPUB plugin and its dependencies to local DITA Open Toolkit">
  </target>
	
	<target name="package-vocabulary-plugins" depends="dist-init, dist-toolkit-plugins"
		description="Create distributable Zip packages of the different Toolkit plugins"
		>
    <zip destfile="${release.dir}/dita4publishers-vocabulary-plugins-${vocab_version}.zip">
      <fileset dir="${plugin.dist}">
        <!-- net.sourceforge.* provides legacy mapping catalogs for
             the old net.sourceforge versions of the vocab.
          -->
        <include name="net.sourceforge.dita4publishers.doctypes/**"/>
        <include name="org.dita4publishers.doctypes/**"/>
        <include name="org.dita4publishers.xmldomain.doctypes/**"/>
        <include name="org.dita4publishers.shakespear.doctypes/**"/>
      </fileset>
    </zip>
	  
  </target>
	
	<target name="package-word2dita-plugins" depends="dist-init, dist-word2dita-toolkit-plugins"
		description="Create distributable Zip package for the Word2DITA transform plugin with its dependencies"
		>
	  <zip destfile="${release.dir}/dita4publishers-word2dita-plugins-${package_version}-ot-${ot-version}.zip">
      <fileset dir="${plugin.dist}">
        <include name="org.dita-community.common.xslt/**"/>
        <include name="org.dita4publishers.doctypes/**"/>
			  <include name="org.dita4publishers.math/**"/>
			  <include name="org.dita4publishers.xmldomain.doctypes/**"/>
        <include name="org.dita4publishers.word2dita/**"/>
      </fileset>
    </zip>
  </target>
	
	<target name="package-toolkit-plugins" 
	  depends="dist-init, 
	           dist-toolkit-plugins"
		description="Create distributable Zip package of the Toolkit plugins, including the vocabulary modules."
		>
	  <zip destfile="${release.dir}/dita4publishers-toolkit-plugins-${package_version}-ot-${ot-version}.zip">
      <fileset dir="${plugin.dist}">
        <include name="*.txt"/>
      	<include name="*/**"/>
        <exclude name="org.dita4publishers.pubmap.fo/**"/>
      </fileset>
    </zip>
  </target>
  
  <target name="package-html5-plugins" depends="dist-init, dist-html5-toolkit-plugins"
     description="Creates an HTML5-only distribution package">
    <zip destfile="${release.dir}/dita4publishers-html5-toolkit-plugins-${package_version}-ot-${ot-version}.zip">
      <fileset dir="${plugin.dist}">
        <include name="*.txt"/>
        <include name="*/**"/>
      </fileset>
    </zip>
  </target>
	
  <target name="package-epub-plugins" depends="dist-init, dist-epub-toolkit-plugins"
     description="Creates an EPUB-only distribution package">
    <zip destfile="${release.dir}/dita4publishers-epub-toolkit-plugins-${package_version}-ot-${ot-version}.zip">
      <fileset dir="${plugin.dist}">
        <include name="*/**"/>
      </fileset>
    </zip>
  </target>
  
  <target name="package-all-plugins" depends="make-plugin-packages"
    description="Make all the plugin packages for release on GitHub"
    >
    <!-- Defining a better name for older make-plugin-packages target -->
  </target>
  
  <target name="make-plugin-packages"
    description="Make all the plugin packages for release on GitHub"
    >
    <delete dir="${release.dir}" includeEmptyDirs="true" failonerror="false">
      <include name="**/*"/>
    </delete>
    
    <!-- Each target clears and uses the dist directory, so have to call
         them rather than using depends. 
      -->
    <antcall target="package-epub-plugins"/>
    <antcall target="package-html5-plugins"/>
    <antcall target="package-word2dita-plugins"/>
    <antcall target="package-vocabulary-plugins"/>
    <antcall target="package-toolkit-plugins"/>
    <antcall target="package-dita2indesign-toolkit-plugins"/>
  </target>
		
	<target name="package-delivery" 
		depends="
		dist-init, 
		package-toolkit-plugins, 
    package-editing-templates, 
		package-api-and-tools,
	  build-d4p-user-guide,
		dist-sample-data, 
		dist-license-info,
		dist-documentation
		"
		description="Create distributable package of all the deliverables"
		>
    <copy todir="${package.dist}/xslt">
      <fileset dir="${xslt.src}">
        <include name="*/**"/>
      </fileset>
    </copy>
		
		<!--
    <copy todir="${package.dist}/epubs">
      <fileset dir="${epubBuild}">
        <include name="**/*.epub"/>
      </fileset>
    </copy>
    -->
		<zip destfile="${release.dir}/${package.zip.base}-${package_version}-ot-${ot-version}.zip">
			<fileset dir="${package.dist}" >
			</fileset>
      <fileset dir="${dist}" >
      	<include name="sample_data/**/*"/>
        <include name="templates/**/*"/>
      </fileset>
			<fileset dir="${build}/docs">
				<include name="*.pdf"/>
        <include name="*.epub"/>
        <include name="*.mobi"/>
        <include name="html/**/*"/>
			</fileset>
		</zip>
	</target>
	
	<target name="epub-d4p-user-guide">
		<property name="pub.name" value="d4p-users-guide"/>
		<property name="root.map" location="${docs.dir}/user_docs/${pub.name}.ditamap"/>
		<property name="output.dir" location="${build}/docs"/>

		<delete dir="${output.dir}" failonerror="false">
			<include name="${pub.name}.epub"/>
		</delete>

		<ant antfile="${dita-ot-dir}/build.xml" 
					dir="${dita-ot-dir}"
					
					>
			<property name="args.input" location="${root.map}"/>
      <property name="transtype" value="epub"/>
			<property name="args.outext" value="html"/>
			<property name="dita.dir" location="${dita-ot-dir}"/>
			<property name="dita.temp.dir" location="${basedir}/temp/${pub.name}/epub"/>
			<property name="clean.temp" value="true"/><!-- Unset to preserve the temp directory -->
			<property name="output.dir" location="${output.dir}"/>
			<property name="args.copycss" value="yes"/>
			<property name="epub.exclude.auto.rellinks" value="true"/>
			<property name="generate.copy.outer" value="2"/>
			<property name="html2.generate.index" value="true"/>
		</ant>		
		
		<antcall target="post-transform-cleanup-d4p-user-guide">
			<param name="pub.name" value="${pub.name}"/>
			<param name="output.dir" location="${output.dir}"/>
    </antcall>
	</target>
	
  <target name="html-d4p-user-guide" 
  	description="Generate HTML for D4P User's Guide">
    <property name="pub.name" value="d4p-users-guide"/>
    <property name="root.map" location="${docs.dir}/user_docs/${pub.name}.ditamap"/>
    <property name="output.dir" location="${build}/docs/html/${pub.name}"/>

    <ant antfile="${dita-ot-dir}/build.xml" 
          dir="${dita-ot-dir}"
          target="dita2html2"
          
          >
      <property name="args.input" location="${root.map}"/>
      <property name="args.outext" value="html"/>
      <property name="dita.dir" location="${dita-ot-dir}"/>
      <property name="args.xhtml.toc" value="index"/>
      <property name="args.hdf" value="${docs.dir}/user_docs/${pub.name}/static-html/topic-header-html.html"/>
      <property name="args.ftr" value="${docs.dir}/user_docs/${pub.name}/static-html/topic-footer-html.html"/>
      <property name="dita.temp.dir" location="${basedir}/temp/${pub.name}/html"/>
      <property name="clean.temp" value="true"/><!-- Unset to preserve the temp directory -->
      <property name="output.dir" location="${output.dir}"/>
    	<property name="html2.generate.dynamic.toc" value="true"/>
      <property name="html2.generate.index" value="true"/>
      <property name="args.css" location="${basedir}/docs/github-websites/dita4publishers.github.io/d4p-users-guide/css/screen.css"/>
      <property name="args.copycss" value="no"/>
      <property name="args.csspath" value="css"/>
      
    </ant>    
  	
  </target>
  
  <target name="html5-d4p-user-guide" description="Generate HTML5 for D4P User's Guide">
    <property name="pub.name" value="d4p-users-guide"/>
    <property name="root.map" location="${docs.dir}/user_docs/${pub.name}.ditamap"/>
    <property name="output.dir" location="${build}/docs/html5/${pub.name}"/>

    <ant antfile="${dita-ot-dir}/build.xml" 
          dir="${dita-ot-dir}"
          target="dita2d4p-html5"
          
          >
      <property name="args.input" location="${root.map}"/>
      <property name="args.outext" value="html"/>
      <property name="args.copycss" value="yes"/>
    	<property name="args.css" location="/${basedir}/src/css/d4p-docs-html5.css"/>
    	<property name="args.hide.parent.link" value="yes"/>
    	<property name="d4p.html5.json.vars.file" location="${output.dir}/json.vars"/>
      <property name="generate.copy.outer" value="2"/>
      <property name="outer.control" value="quiet"/>
      <property name="dita.dir" location="${dita-ot-dir}"/>
      <property name="args.xhtml.toc" value="index"/>
      <property name="args.hdf" value="${docs.dir}/user_docs/${pub.name}/static-html/topic-header-html.html"/>
      <property name="args.ftr" value="${docs.dir}/user_docs/${pub.name}/static-html/topic-footer-html.html"/>
      <property name="dita.temp.dir" location="${basedir}/temp/${pub.name}/html5"/>
      <property name="clean.temp" value="true"/><!-- Unset to preserve the temp directory -->
      <property name="output.dir" location="${output.dir}"/>
    	<property name="html2.generate.dynamic.toc" value="true"/>
      <property name="html2.generate.index" value="true"/>
    </ant>    
  	
  </target>
  
	<target name="post-transform-cleanup-d4p-user-guide">
		<property name="pub.name" value="d4p-users-guide"/>
		<property name="output.dir" location="${build}/docs"/>

		<!-- Delete the directory the Toolkit creates with images -->
		<delete dir="${output.dir}" includeEmptyDirs="true" failonerror="true">
			<include name="${pub.name}/"/>
			<include name="dita.list"/>
			<include name="dita.xml.properties"/>
		</delete>
	</target>
	
	<target name="kindle-d4p-user-guide">
		<property name="pub.name" value="d4p-users-guide.ditamap"/>
		<property name="root.map" location="${docs.dir}/user_docs/${pub.name}"/>

		<property name="output.dir" location="${build}/docs"/>

		<delete failonerror="false">
			<fileset dir="${output.dir}">
				<include name="${pub.name}.mobi"/>
			</fileset>
		</delete>

		<ant antfile="${dita-ot-dir}/build.xml"
			dir="${dita-ot-dir}"
			target="dita2kindle"
			
			>
			<property name="args.input" location="${root.map}"/>
      <property name="transtype" value="kindle"/>
			<property name="args.outext" value="html"/>
			<property name="dita.dir" location="${dita-ot-dir}"/>
			<property name="dita.temp.dir" location="${basedir}/temp/${pub.name}/kindle"/>
			<property name="clean.temp" value="true"/><!-- Unset to preserve the temp directory -->
			<property name="output.dir" location="${output.dir}"/>
			<property name="kindlegen.executable" location="${kindlegen.executable}"/>
			<property name="args.copycss" value="yes"/>
			<property name="epub.exclude.auto.rellinks" value="true"/>
			<property name="generate.copy.outer" value="2"/>
			<property name="html2.generate.index" value="true"/>
	  </ant>
		
		<antcall target="post-transform-cleanup-d4p-user-guide">
			<param name="pub.name" value="${pub.name}"/>
			<param name="output.dir" location="${output.dir}"/>
	  </antcall>

	</target>
	
	<target name="pdf-d4p-user-guide" description="Build the PDF for the D4P user's guide">
		<property name="pub.name" value="d4p-users-guide.ditamap"/>
		<property name="root.map" location="${docs.dir}/user_docs/${pub.name}"/>
		<property name="output.dir" location="${build}/docs"/>

		<delete failonerror="false">
			<fileset dir="${output.dir}">
				<include name="${pub.name}.pdf"/>
			</fileset>
		</delete>
		<ant antfile="${dita-ot-dir}/build.xml"
			>
			<property name="pdf.formatter" value="ah"/>
      <property name="args.input"  location="${root.map}"/>
      <property name="args.draft" value="${draft}"/>
      <property name="output.dir"  value="${output.dir}"/>
      <property name="dita.temp.dir" value="${basedir}/temp/${pub.name}/pdf"/>
      <property name="transtype"   value="pdf2"/>
      <property name="clean.temp" value="yes"/>
		</ant>
		
		<antcall target="post-transform-cleanup-d4p-user-guide">
			<param name="pub.name" value="${pub.name}"/>
			<param name="output.dir" location="${output.dir}"/>
	  </antcall>

	</target>
		
	<target name="indesign-d4p-user-guide">
		<property name="pub.name" value="d4p-users-guide.ditamap"/>
		<property name="root.map" location="${docs.dir}/user_docs/${pub.name}"/>
		<property name="output.dir" location="${build}/docs/indesign"/>

		<ant antfile="${dita-ot-dir}/build.xml"
			target="dita2indesign"
			>
      <property name="args.input"  location="${root.map}"/>
      <property name="args.draft" value="${draft}"/>
      <property name="output.dir"  value="${output.dir}"/>
      <property name="dita.temp.dir" value="${basedir}/temp/${pub.name}/indesign"/>
      <property name="transtype"   value="indesign"/>
      <property name="clean.temp" value="yes"/>
		</ant>
		
	</target>
		
	<target name="build-d4p-user-guide" 
	  description="Generates all the deliverable forms of the D4P User Guide">
		<property name="pub.name" value="d4p-users-guide.ditamap"/>
		<property name="root.map" location="${docs.dir}/user_docs/${pub.name}"/>
		
    <replace file="${docs.dir}/user_docs/d4p-users-guide.ditamap"
      propertyfile="${basedir}/build.number"
      >
      <replacefilter
        token="^buildnumber^"
        property="build.number"
      />
      <replacefilter
        token="^version^"
        value="${package_version}"
      />
    </replace>


	  <antcall target="html5-d4p-user-guide"/>
	  <antcall target="epub-d4p-user-guide"/>
		<antcall target="kindle-d4p-user-guide"/>
		<!-- <antcall target="indesign-d4p-user-guide"/> -->
    <antcall target="pdf-d4p-user-guide"/>
	</target>
	
	<target name="generate-epubs-for-samples" depends="epub-wizard-of-oz, epub-shakespear-plays"
	  description="Generate ePUB versions of the publications in sample_data"
	>
	</target>
	  
  <target name="test-epub-shakespear-play" description="Test generation of epubs for shakespear plays">
	    <property name="sampleRootDir" location="${shakespear-sample}/plays"/>
	    <antcall target="epub-map"><param name="mapname" value="hen_viii"/></antcall>
  </target>
	
	<target name="epub-shakespear-plays" description="Generate epubs for each of the shakespear plays">
		<property name="sampleRootDir" location="${shakespear-sample}/plays"/>
		<antcall target="epub-map"><param name="mapname" value="a_and_c"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="all_well"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="as_you"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="com_err"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="coriolan"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="cymbelin"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="dream"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="hamlet"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="hen_iv_1"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="hen_iv_2"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="hen_v"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="hen_vi_1"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="hen_vi_2"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="hen_vi_3"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="hen_viii"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="j_caesar"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="john"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="lear"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="lll"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="m_for_m"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="m_wives"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="macbeth"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="merchant"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="much_ado"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="othello"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="pericles"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="r_and_j"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="rich_ii"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="rich_iii"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="t_night"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="taming"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="tempest"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="timon"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="titus"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="troilus"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="two_gent"/></antcall>
		<antcall target="epub-map"><param name="mapname" value="win_tale"/></antcall>
	</target>
	
	<target name="epub-wizard-of-oz" description="Generate epub for the Wizard of Oz">
		<antcall target="epub-map">
			<param name="mapname" value="wizard-of-oz"/>
			<param name="sampleRootDir" location="${sampledata}"/>
		</antcall>
	</target>
  
  <!-- this builds wizard of oz with only three chapters to save processing time -->
  <target name="epub-epub-test" description="Generate epub for EPUB test document">
    <antcall target="epub-map">
      <param name="mapname" value="epub-test"/>
      <param name="sampleRootDir" location="${sampledata}"/>
    </antcall>
  </target>
  
  <!-- this builds kindle version of epub-test -->
  <target name="kindle-epub-test" description="Generate kindle for an excerpt of the EPUB Test document">
    <antcall target="kindle-map">
      <param name="mapname" value="epub-test"/>
      <param name="sampleRootDir" location="${sampledata}"/>
    </antcall>
  </target>
	  
	<target name="html-api-and-tools-docs" description="Generate HTML for API and tools documentation">
    <ant antfile="${dita-ot-dir}${file.separator}build.xml"
      dir="${dita-ot-dir}"
      target="dita2xhtml"      
      >
      <property name="args.input" location="${docs.dir}/user_docs/dita-api-and-tools.ditamap"/>
      <property name="transtype" value="xhtml"/>
      <property name="args.outext" value="html"/>
      <property name="args.xhtml.toc" value="index"/>
      <property name="dita.dir" location="${dita-ot-dir}"/>
      <property name="dita.temp.dir" location="${temp}/dita-temp"/>
      <property name="clean.temp" value="true"/><!-- Unset to preserve the temp directory -->
      <property name="output.dir" location="${website.build}/api-and-tools"/>
    </ant>
	</target>
	
	<target name="epub-map">
		<echo message="mapname='${mapname}'"/>
		
		<!-- The epub process doesn't clean out the output directory, so
		     we have to do it.
		  -->
    <delete includeEmptyDirs="true" failonerror="false">
      <fileset dir="${epubTemp}"  includes="*/**"/>
    </delete>

		<ant antfile="${dita-ot-dir}/build.xml"
			dir="${dita-ot-dir}"
			target="dita2epub"
			
			>
			<property name="args.input" location="${sampleRootDir}/${mapname}/${mapname}.ditamap"/>
      <property name="transtype" value="dita2epub"/>
			<property name="args.outext" value="html"/>
			<property name="args.xhtml.toc" value="index"/>
			<property name="dita.dir" location="${dita-ot-dir}"/>
			<property name="dita.temp.dir" location="${temp}/dita-temp"/>
			<property name="clean.temp" value="true"/><!-- Unset to preserve the temp directory -->
			<property name="output.dir" location="${epubBuild}"/>
	  </ant>

	</target>

	<target name="kindle-map">
		<echo message="mapname='${mapname}'"/>
		
		<!-- The kindle process doesn't clean out the output directory, so
		     we have to do it.
		  -->
    <delete includeEmptyDirs="true" failonerror="false">
      <fileset dir="${kindleTemp}"  includes="*/**"/>
    </delete>

		<ant antfile="${dita-ot-dir}/build.xml"
			dir="${dita-ot-dir}"
			target="dita2kindle"
			
			>
			<property name="args.input" location="${sampleRootDir}/${mapname}/${mapname}.ditamap"/>
      <property name="transtype" value="dita2kindle"/>
			<property name="args.outext" value="html"/>
			<property name="args.xhtml.toc" value="index"/>
			<property name="dita.dir" location="${dita-ot-dir}"/>
			<property name="dita.temp.dir" location="${temp}/dita-temp"/>
			<property name="clean.temp" value="true"/><!-- Unset to preserve the temp directory -->
			<property name="output.dir" location="${kindleBuild}"/>
	  </ant>

	</target>

	<target name="init-target" depends="init">
    <delete dir="${target.home}" failonerror="false"/>
    <mkdir dir="${target.home}"/>
		<mkdir dir="${api-and-tools.target}"/>
    <mkdir dir="${api-and-tools.target}/lib"/>
  </target>
	
  <target name="compile" depends="init">
    
    <delete dir="${classes.home}" />
    
    <mkdir dir="${classes.home}"/>
    <javac       
      srcdir="${src.java.home}"
      destdir="${classes.home}"
      debug="on"
      deprecation="on">
      <classpath refid="classpath.base"/>
    </javac>    
  </target>
	
  <target name="jar-inx-util" depends="dist-init,compile" description="Create jar for DITA2InDesign INX Utility library">
    <jar jarfile="${dist}/dita2indesign-inx-util.jar" basedir="${classes.home}" >
			<include name="net/sourceforge/dita4publishers/util/conversion/**/*"/>
			<include name="org/dita2indesign/util/**/*"/>
			<include name="org/dita2indesign/indesign/**/*"/>
    </jar>
  </target>
	
	<target name="jar-tools" depends="init, init-target, compile, jar-api" 
	  description="Create jar for tools and implementation components">
		<jar destfile="${api-and-tools.target}/lib/dita4publishers-dita-impl.jar" basedir="${classes.home}">
			<include name="net/sourceforge/dita4publishers/impl/**/**.*"/>
      <include name="net/sourceforge/dita4publishers/tools/common/**.*"/>
      <include name="net/sourceforge/dita4publishers/tools/dxp/**.*"/>
      <include name="net/sourceforge/dita4publishers/util/**/**.*"/>
		</jar>
    <jar destfile="${api-and-tools.target}/dita4publishers-mapbosreporter.jar" basedir="${classes.home}">
      <include name="net/sourceforge/dita4publishers/tools/mapreporter/**/**.*"/>
      <manifest>
        <attribute name="Main-Class" value="org.dita4publishers.tools.mapreporter.MapBosReporter"/>
        <attribute name="Class-Path" value=". 
          lib/.
          lib/dita4publishers-dita-api.jar
          lib/dita4publishers-dita-impl.jar
          lib/commons-logging.jar
          lib/commons-cli.jar
          lib/commons-io.jar
          lib/log4j.jar
          lib/resolver.jar
          lib/xml-apis.jar
          lib/xercesImpl.jar
          lib/saxon9.jar
          lib/saxon9-dom.jar
          lib/saxon9-s9api.jar
          lib/saxon9-xpath.jar
              "
        />
      </manifest>
    </jar>
    <jar destfile="${api-and-tools.target}/dita4publishers-dxppackager.jar" basedir="${classes.home}">
      <include name="net/sourceforge/dita4publishers/tools/ditadxpmappackager/**/**.*"/>
      <manifest>
        <attribute name="Main-Class" value="org.dita4publishers.tools.ditadxpmappackager.DitaDxpMapPackager"/>
        <attribute name="Class-Path" value=". 
          lib/.
          lib/dita4publishers-dita-api.jar
          lib/dita4publishers-dita-impl.jar
          lib/commons-logging.jar
          lib/commons-cli.jar
          lib/commons-io.jar
          lib/log4j.jar
          lib/resolver.jar
          lib/xml-apis.jar
          lib/xercesImpl.jar
          lib/saxon9.jar
          lib/saxon9-dom.jar
          lib/saxon9-s9api.jar
          lib/saxon9-xpath.jar
              "
        />
      </manifest>
    </jar>
    <jar destfile="${api-and-tools.target}/dita4publishers-dxpunpacker.jar" basedir="${classes.home}">
      <include name="net/sourceforge/dita4publishers/tools/ditadxpunpacker/**/**.*"/>
      <manifest>
        <attribute name="Main-Class" value="org.dita4publishers.tools.ditadxpunpacker.DitaDxpUnpacker"/>
        <attribute name="Class-Path" value=". 
          lib/.
          lib/dita4publishers-dita-api.jar
          lib/dita4publishers-dita-impl.jar
          lib/commons-logging.jar
          lib/commons-cli.jar
          lib/commons-io.jar
          lib/log4j.jar
          lib/resolver.jar
          lib/xml-apis.jar
          lib/xercesImpl.jar
          lib/saxon9.jar
          lib/saxon9-dom.jar
          lib/saxon9-s9api.jar
          lib/saxon9-xpath.jar
              "
        />
      </manifest>
    </jar>
	  </target>
	  
	<target name="javadoc-api-and-tools" depends="init, init-target, compile" 
	    description="Generate Javadoc for API and">
		<javadoc
			access="public"
			destdir="${api-and-tools.target}/docs/javadoc"
		  classpathref="classpath.base"
			overview="${src}/net/sourceforge/dita4publishers/overview.html"
			>
			<fileset dir="${src}">
				<include name="net/sourceforge/dita4publishers/**/*.java"/>
			</fileset>
		</javadoc>
	</target>
  
  <target name="jar-api" depends="init, init-target, compile" 
    description="Create jar for API components">
  	<mkdir dir="${api-and-tools.target}/lib"/>
    <jar destfile="${api-and-tools.target}/lib/dita4publishers-dita-api.jar" basedir="${classes.home}">
      <include name="net/sourceforge/dita4publishers/api/**/**.*"/>
    </jar>
    </target>
      
  <target name="package-editing-templates" depends="init-target, clean" 
  	description="Packages the editing templates in their own Zip file.">
  	<copy todir="${dist}/templates">
  		<fileset dir="${templates.dir}">
  			<include name="maps/**"/>
        <include name="topics/**"/>
        <include name="word2dita/**"/>
  		</fileset>
  	</copy>
  	<zip destfile="${dist}/dita4publishers-templates.zip" basedir="${dist}">
  		<include name="templates/*/**"/>
  	</zip>
  </target>

	<target name="rsuite-add-version-info-to-files">
    <replace file="${classes.home}/rsuite-plugin.xml"
      propertyfile="${basedir}/build.number"
      >
      <replacefilter
        token="^version^"
        value="${plugin_version}"
      />
      <replacefilter
        token="^buildnumber^"
        property="build.number"
      />
      <replacefilter
        token="^timestamp^"
        value="${build-date-time}"
      />
    </replace>
  </target>


  <target name="package-rsuite-plugins" depends="init-target, clean">
    <!-- NOTE: The RSuite plugin only packages Web-accessible resources.
               It contains no Java code.
      -->
  	<copy file="${rsuite.xslt}/includes-catalog.xml" todir="${classes.home}"/>
  	<copy file="${rsuite.src}/rsuite-plugin.xml" todir="${classes.home}"/>
    <copy todir="${classes.home}/WebContent/xslt">
      <fileset dir="${xslt.src}"/>
    </copy>
    <copy todir="${classes.home}/WebContent/xslt/word2dita">
    	<!-- This location for the word2dita stuff is retained for older
    	     code that reflects the old location.
    	  -->
      <fileset dir="${toolkit.plugin.src}/org.dita4publishers.word2dita/xsl"/>
    </copy>
    <copy todir="${classes.home}/WebContent/toolkit_plugins">
      <fileset dir="${toolkit.plugin.src}">
      	<include name="org.dita4publishers.common.*/**/*"/>
      	<include name="org.dita4publishers.dita2indesign/**/*"/>
        <include name="org.dita4publishers.word2dita/**/*"/>
        <include name="org.dita4publishers.slideset/**/*"/>
    	</fileset>
    </copy>

    <replace file="${classes.home}/rsuite-plugin.xml"
      propertyfile="${basedir}/build.number"
      >
      <replacefilter
        token="^version^"
        value="${rsuite-plugin_version}"
      />
      <replacefilter
        token="^buildnumber^"
        property="build.number"
      />
      <replacefilter
        token="^timestamp^"
        value="${build-date-time}"
      />
    </replace>

    <jar destfile="${target.home}/${target.jar}" >
      <fileset dir="${classes.home}" >
        <include name="**.*" />
        <include name="**/**.*" />
        <exclude name="**/log4j.properties"/>
      </fileset>
    </jar>
  </target>
	
  <target name="package-api-and-tools" depends="init-target, jar-api, jar-tools, javadoc-api-and-tools">
  	<mkdir dir="${target.home}/d4p-api-and-tools"/>
  	<copy todir="${api-and-tools.target}/lib">
  		<fileset dir="${lib}">
        <include name="log4j.properties"/>
        <include name="dita4publishers-dita-api.jar"/>
    		<include name="commons-logging.jar"/>
    		<include name="commons-cli.jar"/>
    		<include name="commons-io.jar"/>
    		<include name="log4j.jar"/>
    		<include name="resolver.jar"/>
    		<include name="xml-apis.jar"/>
    		<include name="xercesImpl.jar"/>
    		<include name="saxon9.jar"/>
    		<include name="saxon9-dom.jar"/>
    		<include name="saxon9-s9api.jar"/>
    		<include name="saxon9-xpath.jar"/>
  	  </fileset>
  	</copy>
  </target>
  
	<target name="deploy-rsuite-plugins-locally" description="Deploy the plugin to a local server's plugin directory"
	  depends="package-rsuite-plugins"
	  >
	  <copy file="${target.home}/${target.jar}" 
	      todir="${rsuite.plugins.dir}"/>
	 </target>
</project>